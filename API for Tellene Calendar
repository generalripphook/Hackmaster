// Calendar and down day counter for modern settings
// Created by Kirsty (https://app.roll20.net/users/1165285/kirsty)

// API Commands:
// !cal - for the GM displays the menu in the chat window, for a player displays date and weather

// Red Colour: #7E2D40

var Calendar = Calendar || (function() {
    'use strict';
    
    var version = '1.0',
    
    setDefaults = function() {
        state.Calendar = {
            now: {
                ordinal: 1,
                year: 419,
                weather: "It is a cool but sunny day."
            },
        };
    },
   
    handleInput = function(msg) {
        var args = msg.content.split(",");
        
        if (msg.type !== "api") {
			return;
		}
		
		if(playerIsGM(msg.playerid)){
		    switch(args[0]) {
		        case '!cal':
                    calmenu();
                    break;
                case '!setday':
                    getordinal(msg);
                    weather();
                    calmenu();
                    break;
                case '!setmonth':
                    getordinal(msg);
                    weather();
                    calmenu();
                    break;
                case '!setyear':
                    state.Calendar.now.year=args[1];
                    calmenu();
                    break;
                case '!setordinal':
                    state.Calendar.now.ordinal=args[1];
                    calmenu();
                    break;
                case '!addday':
                    addday(args[1]);
                    weather();
                    calmenu();
                    break;
                case '!weather':
                    weather();
                    calmenu();
                    break;
                case '!playercal':
                    showcal(msg);
                    break;
    	    }
		}else if(args[0]=='!cal'){
		    showcal(msg);
		}
    },
    
    calmenu = function() {
        var divstyle = 'style="width: 189px; border: 1px solid black; background-color: #ffffff; padding: 5px;"'
        var astyle = 'style="text-align:center; border: 1px solid black; margin: 1px; background-color: #7E2D40; border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';
        var tablestyle = 'style="text-align:center;"';
        var arrowstyle = 'style="border: none; border-top: 3px solid transparent; border-bottom: 3px solid transparent; border-left: 195px solid rgb(126, 45, 64); margin-bottom: 2px; margin-top: 2px;"';
        var headstyle = 'style="color: rgb(126, 45, 64); font-size: 18px; text-align: left; font-variant: small-caps; font-family: Times, serif;"';
        var substyle = 'style="font-size: 11px; line-height: 13px; margin-top: -3px; font-style: italic;"';
        var nowdate = getdate(state.Calendar.now.ordinal).split(',');
        var month = nowdate[0];
        var day = nowdate[1];
        var moonD = getMoonPhase(80, 73, 0.3);
        var moonP = getMoonPhase(34, 30, 0.2);
        var moonV = getMoonPhase(28, 1, 0.25);
        
        sendChat('Calendar', '/w gm <div ' + divstyle + '>' + //--
            '<div ' + headstyle + '>Calendar</div>' + //--
            '<div ' + substyle + '>Menu</div>' + //--
            '<div ' + arrowstyle + '></div>' + //--
            '<table>' + //--
            '<tr><td>Day: </td><td><a ' + astyle + '" href="!setday,?{Day?|1},' + month +'">' + day + '</a></td></tr>' + //--
            '<tr><td>Month: </td><td><a ' + astyle + '" href="!setmonth,' + day + ',?{Month|January|February|March|April|May|June|July|August|September|October|November|December}">' + month + '</a></td></tr>' + //--
            '<tr><td>Year: </td><td><a ' + astyle + '" href="!setyear,?{Year?|2017}">' + state.Calendar.now.year + '</a></td></tr>' + //--
            '<tr><td>Ordinal: </td><td><a ' + astyle + '" href="!setordinal,?{Ordinal?|1}">' + state.Calendar.now.ordinal + '</a></td></tr>' + //--
            '</table>' + //--
            '<br>Weather: ' + state.Calendar.now.weather + //--
            '<br><br>Diadolai: ' + moonD + //--
            '<br><br>Pelselond: ' + moonP + //--
            '<br><br>Veshemo: ' + moonV + //--
            '<br><br><div style="text-align:center;"><a ' + astyle + '" href="!addday,?{Days to add?|1}">Advance the Date</a></div>' + //--
            '<div style="text-align:center;"><a ' + astyle + '" href="!weather">Roll Weather</a></div>' + //--
            '<div style="text-align:center;"><a ' + astyle + '" href="!playercal">Show to Players</a></div>' + //--
            '</div>'
        );
    },
    
    showcal = function(msg) {
        var nowdate = getdate(state.Calendar.now.ordinal).split(',');
        var month = nowdate[0];
        var day = nowdate[1];
        var suffix = getsuffix(day);
        var divstyle = 'style="width: 189px; border: 1px solid black; background-color: #ffffff; padding: 5px;"'
        var astyle = 'style="text-align:center; border: 1px solid black; margin: 1px; background-color: #7E2D40; border-radius: 4px;  box-shadow: 1px 1px 1px #707070;';
        var tablestyle = 'style="text-align:center;"';
        var arrowstyle = 'style="border: none; border-top: 3px solid transparent; border-bottom: 3px solid transparent; border-left: 195px solid rgb(126, 45, 64); margin-bottom: 2px; margin-top: 2px;"';
        var headstyle = 'style="color: rgb(126, 45, 64); font-size: 18px; text-align: left; font-variant: small-caps; font-family: Times, serif;"';
        var substyle = 'style="font-size: 11px; line-height: 13px; margin-top: -3px; font-style: italic;"';
        var moonD = getMoonPhase(80, 73, 0.3);
        var moonP = getMoonPhase(34, 30, 0.2);
        var moonV = getMoonPhase(28, 1, 0.25);
        
        sendChat(msg.who, '<div ' + divstyle + '>' + //--
            '<div ' + headstyle + '>Calendar</div>' + //--
            '<div ' + substyle + '>Player View</div>' + //--
            '<div ' + arrowstyle + '></div>' + //--
            day + suffix + ' ' + month + ', ' + state.Calendar.now.year + //--
            '<br><br>Today\'s weather:<br>' + state.Calendar.now.weather + //--
            '<br><br>Diadolai: ' + moonD + //--
            '<br><br>Pelselond: ' + moonP + //--
            '<br><br>Veshemo: ' + moonV
        );
    },
    
    getdate = function(options){
        var day = Number(options);
        var date;
        var month;
        
        if(day>0 && day<=28){
            month="Renewal"; 
            date=day;
        }else if(day>28 && day<=56){
            month="Sowing"; 
            date=day-28;
        }else if(day>56 && day<=84){
            month="Mustering"; 
            date=day-56;
        }else if(day>84 && day<=112){
            month="Declarations";
            date=day-84;
        }else if(day>112 && day<=140){
            month="Mid-Season Harvest";
            date=day-112;
        }else if(day>140 && day<=168){
            month="Replanting";
            date=day-140;
        }else if(day>168 && day<=196){
            month="Seige Hold";
            date=day-168;
        }else if(day>196 && day<=224){
            month="Arid";
            date=day-196;
        }else if(day>224 && day<=252){
            month="Reaping";
            date=day-224;
        }else if(day>252 && day<=280){
            month="Harvest";
            date=day-252;
        }else if(day>280 && day<=308){
            month="Frosting"
            date=day-280;
        }else if(day>308 && day<=336){
            month="Snowfall";
            date=day-308;
        }else if(day>336 && day<=364){
            month="Famine";
            date=day-336;
        }else{
            month="Renewal";
            date='1';
        }
    
        var array=month+','+String(date);
        return array;    
    },
    
    getordinal = function(options){
        var args = options.content.split(",");
        var date = Number(args[1]);
        var month = args[2];
        var ordinal = state.Calendar.now.ordinal;
        
        switch(month) {
            case 'Renewal':
                ordinal = date;
                break;
            case 'Sowing':
                ordinal = 28+date;
                break;
            case 'Mustering':
                ordinal = 56+date;
                break;
            case 'Declarations':
                ordinal = 84+date;
                break;
            case 'Mid-Season Harvest':
                ordinal = 112+date;
                break;
            case 'Replanting':
                ordinal = 140+date;
                break;
            case 'Seige-Hold':
                ordinal = 168+date;
                break;
            case 'Arid':
                ordinal = 196+date;
                break;
            case 'Reaping':
                ordinal = 224+date;
                break;
            case 'Harvest':
                ordinal = 252+date;
                break;
            case 'Frosting':
                ordinal = 280+date;
                break;
            case 'Snowfall':
                ordinal = 308+date;
                break;
            case 'Famine':
                ordinal = 336+date;
                break;
            }
        state.Calendar.now.ordinal = ordinal;
    },
    
    getsuffix = function(day) {
        
        var date = Number(day)
        var suffix
        
        if (date == 1 || date == 21 ){
            suffix = 'st';
        }else if (date == 2 || date == 22){
            suffix = 'nd';
        }else if (date == 3 || date == 23){
            suffix = 'rd';
        }else{
            suffix = 'th';
        }
        
        return suffix;
    },

    addday = function(add) {
        var ordinal = Number(add)
        ordinal = ordinal + Number(state.Calendar.now.ordinal);
        
        if(ordinal>365){
            ordinal=ordinal-365;
            state.Calendar.now.year = Number(state.Calendar.now.year)+1;
        }
        
        state.Calendar.now.ordinal = ordinal;
    },
    
    weather = function() {
        var roll;
        var temperature;
        var wind;
        var precipitation;
        var season;
        var ordinal = state.Calendar.now.ordinal;
        
        if(ordinal > 364 || ordinal <= 91){
            season = 'Spring'
        }else if(ordinal > 91 && ordinal <= 182 ){
            season = 'Summer'
        }else if(ordinal > 182 && ordinal <= 273 ){
            season = 'Fall'
        }else if(ordinal > 273 && ordinal <= 364 ){
            season = 'Winter'
        }
        
        roll = Math.floor(Math.random()*(20-1+1)+1);
        if(roll>=15 && roll<=17){
            switch(season) {
                case 'Winter':
                    temperature = 'It is a bitterly cold winter day. ';
                    break;
                case 'Spring':
                    temperature = 'It is a cold spring day. ';
                    break;
                case 'Summer':
                    temperature = 'It is a cool summer day. ';
                    break;
                case 'Fall':
                    temperature = 'It is a cold fall day. ';
                    break;
            }
        }else if(roll>=18 && roll<=20){
            switch(season) {
                case 'Winter':
                    temperature = 'It is a warm winter day. ';
                    break;
                case 'Spring':
                    temperature = 'It is a hot spring day. ';
                    break;
                case 'Summer':
                    temperature = 'It is a blisteringly hot summer day. ';
                    break;
                case 'Fall':
                    temperature = 'It is a hot fall day. ';
                    break;
            }
        }else{
            switch(season) {
                case 'Winter':
                    temperature = 'It is a cold winter day. ';
                    break;
                case 'Spring':
                    temperature = 'It is a mild spring day. ';
                    break;
                case 'Summer':
                    temperature = 'It is a hot summer day. ';
                    break;
                case 'Fall':
                    temperature = 'It is a mild fall day. ';
                    break;
            }
            
        }
        
        roll = Math.floor(Math.random()*(20-1+1)+1);
        if(roll>=15 && roll<=17){
            wind='There is a light breeze and ';
        }else if(roll>=18 && roll<=20){
            wind='There is a howling wind and ';
        }else{
            wind='The air is still and ';
        }
        
        roll = Math.floor(Math.random()*(20-1+1)+1);
        if(roll>=15 && roll<=17){
            precipitation="Light rain or snow.";
            if(season=='Winter'){
                precipitation = 'snow falls softly on the ground.';
            }else{
                precipitation = 'a light rain falls from the sky.';
            }
        }else if(roll>=18 && roll<=20){
            if(season=='Winter'){
                precipitation = 'snow falls thick and fast from the sky.';
            }else{
                precipitation = 'a torrential rain begins to fall.';
            }
        }else{
            roll = Math.floor(Math.random()*(2-1+1)+1);
            if(roll=1){
                precipitation = 'the sky is overcast.';
            }else{
                precipitation = 'the sky is clear.';
            }
        }
        
        var forecast=temperature+wind+precipitation;
        state.Calendar.now.weather = forecast;
    },
    
    /**
     * Returns the current phase of the moon as a String
     * @param cycle Integer, number of days in the requested moon's cycle
     * @param start Integer, the moon's initial position in the cycle on the first day of history (a value between 1 and cycle, inclusive)
     * @param fudge Float, "fudge factor" to push nearly completed phases into next phase (default = 0.0)
     */
    getMoonPhase = function(cycle, start, fudge) {
        if (typeof fudge === undefined) { fudge = 0.0; }
        // Number of days since the beginning of time (Tellene has a 364-day year); Year 1 and Day 1 both count as 0
        let days = state.Calendar.now.ordinal - 1 + (364 * (state.Calendar.now.year - 1));
        // Current day of cycle (1 <= n <= cycle)
        let n = 1 + ((start + days) % cycle);
        // Current phase of moon is a value between 0 and 8, where 0 and 8 are the same phase
        let phase = Math.floor(fudge + (n * 8 / cycle));
        switch (phase) {
            case 1: return 'Waxing Cresent';
            case 2: return 'First Quarter';
            case 3: return 'Waxing Gibbous';
            case 4: return 'Full';
            case 5: return 'Waning Gibbous';
            case 6: return 'Third Quarter';
            case 7: return 'Waning Cresent';
        }
        return 'New'; // case 0 and 8
    },
    
    checkInstall = function() {
        // Check if the Calendar property exists, creating it if it doesn't
        if( ! state.Calendar ) {
            setDefaults();
        }
    },
    
    registerEventHandlers = function() {
        on('chat:message', handleInput);
	};

	return {
	    CheckInstall: checkInstall,
		RegisterEventHandlers: registerEventHandlers
	};
	
}());

on("ready",function(){
	'use strict';
	Calendar.CheckInstall();
	Calendar.RegisterEventHandlers();
});
